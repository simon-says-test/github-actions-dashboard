import config from "../../src/config.js";

class VulnerabilityService {
  constructor(githubService) {
    this.githubService = githubService;
  }

  async getRepoVulnerabilities(owner, name, severity, status) {
    try {
      const state = status.toLowerCase();
      const response = await this.githubService.getSecurityVulnerabilities(owner, name, state);
      console.log(`Retrieved ${response.data.length} vulnerabilities`);

      let vulnerabilities = response.data;

      // Apply severity filter if not "All"
      if (severity !== "All") {
        const normalizedSeverity = severity.toLowerCase();
        vulnerabilities = vulnerabilities.filter(
          v => v.security_vulnerability.severity.toLowerCase() === normalizedSeverity
        );
      }

      return {
        repository: name,
        vulnerabilities: vulnerabilities
      };
    } catch (error) {
      console.error(`Error fetching vulnerabilities for ${name}:`, error);
      return { repository: name, vulnerabilities: [] };
    }
  }
}

export default VulnerabilityService;
